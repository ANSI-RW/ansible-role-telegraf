---
sudo: required

language: python
python: "2.7"

services:
  - docker

env:
  global:
    - CONTAINER_ID: $(mktemp)
    - PORT_MAPPING: $(mktemp)
  matrix:
    - OS_FAMILY: redhat
      RUN_OPTS: "\"-v /sys/fs/cgroup:/sys/fs/cgroup:ro\""
      SITE: test.yml
    - OS_FAMILY: debian
      RUN_OPTS: "\"-v /sys/fs/cgroup:/sys/fs/cgroup:ro\""
      SITE: test.yml

before_install:
  # Generate local SSH key
  - ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa
  - cp ~/.ssh/id_rsa.pub tests/

  # Build Dockerfile image
  - docker build --rm=true -f tests/Dockerfile.${OS_FAMILY} -t ${OS_FAMILY}:ansible tests/

  # Run container, detached
  - docker run -d --privileged -P ${RUN_OPTS} ${OS_FAMILY}:ansible > "${CONTAINER_ID}"
  # Allow container to start
  - sleep 10
  # Get port 22 mapping
  - docker port "$(cat ${CONTAINER_ID})" 22 > "${PORT_MAPPING}"

  # Authenticate SSH host
  - ssh-keyscan -Hp "$(cat ${PORT_MAPPING} | cut -d ':' -f 2 )" "$(cat ${PORT_MAPPING} | cut -d ':' -f 1 )" > ~/.ssh/known_hosts

install:
  # pip install Ansible 2.x
  - pip install ansible==2.*

  # Add ansible.cfg to pick up roles path
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } > ansible.cfg"

script:
  # Check role/playbook syntax
  - ansible-playbook -i "$(cat ${PORT_MAPPING})", tests/$SITE --syntax-check

  # Run role/playbook with ansible-playbook
  - ansible-playbook -i "$(cat ${PORT_MAPPING})", tests/$SITE

  # Run role/playbook again (idempotence)
  - >
    ansible-playbook -i "$(cat ${PORT_MAPPING})", tests/$SITE
    | grep -q "changed=0.*unreachable=0.*failed=0"
    && (echo "Idempotence test: Pass" && exit 0)
    || (echo "Idempotence test: Fail" && exit 1)

  # Check telegraf version
  - docker exec "$(cat ${CONTAINER_ID})" telegraf --version

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
